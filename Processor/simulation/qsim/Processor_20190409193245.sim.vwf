/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2016  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("STATE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("STATE[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STATE";
}

SIGNAL("STATE[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STATE";
}

SIGNAL("STATE[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STATE";
}

SIGNAL("STATE[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STATE";
}

SIGNAL("STATE[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STATE";
}

SIGNAL("STATE[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STATE";
}

SIGNAL("LEDG[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SW[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("instruction")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instruction[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("programcounter_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("programcounter_in[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

SIGNAL("programcounter_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "programcounter_in";
}

TRANSITION_LIST("STATE[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.409;
			LEVEL 0 FOR 193.227;
			LEVEL 1 FOR 60.051;
			LEVEL 0 FOR 119.949;
			LEVEL 1 FOR 20.051;
			LEVEL 0 FOR 139.949;
			LEVEL 1 FOR 60.051;
			LEVEL 0 FOR 139.949;
			LEVEL 1 FOR 20.051;
			LEVEL 0 FOR 139.949;
			LEVEL 1 FOR 60.051;
			LEVEL 0 FOR 119.949;
			LEVEL 1 FOR 20.051;
			LEVEL 0 FOR 139.949;
			LEVEL 1 FOR 60.051;
			LEVEL 0 FOR 139.949;
			LEVEL 1 FOR 20.051;
			LEVEL 0 FOR 139.949;
			LEVEL 1 FOR 60.051;
			LEVEL 0 FOR 119.949;
			LEVEL 1 FOR 20.051;
			LEVEL 0 FOR 139.949;
			LEVEL 1 FOR 60.051;
			LEVEL 0 FOR 2.313;
		}
	}
}

TRANSITION_LIST("STATE[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.663;
			LEVEL 0 FOR 133.32;
			LEVEL 1 FOR 59.958;
			LEVEL 0 FOR 280.042;
			LEVEL 1 FOR 59.958;
			LEVEL 0 FOR 300.042;
			LEVEL 1 FOR 59.958;
			LEVEL 0 FOR 280.042;
			LEVEL 1 FOR 59.958;
			LEVEL 0 FOR 300.042;
			LEVEL 1 FOR 59.958;
			LEVEL 0 FOR 280.042;
			LEVEL 1 FOR 59.958;
			LEVEL 0 FOR 62.059;
		}
	}
}

TRANSITION_LIST("STATE[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.426;
			LEVEL 0 FOR 233.312;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 100.034;
			LEVEL 1 FOR 39.966;
			LEVEL 0 FOR 180.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 80.034;
			LEVEL 1 FOR 79.966;
			LEVEL 0 FOR 180.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 100.034;
			LEVEL 1 FOR 39.966;
			LEVEL 0 FOR 180.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 80.034;
			LEVEL 1 FOR 79.966;
			LEVEL 0 FOR 180.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 100.034;
			LEVEL 1 FOR 39.966;
			LEVEL 0 FOR 180.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 2.296;
		}
	}
}

TRANSITION_LIST("STATE[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.215;
			LEVEL 0 FOR 113.276;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 59.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 79.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 99.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 59.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 79.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 139.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 59.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 79.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 99.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 59.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 79.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 139.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 59.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 79.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 99.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 59.998;
			LEVEL 1 FOR 40.002;
			LEVEL 0 FOR 22.507;
		}
	}
}

TRANSITION_LIST("STATE[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.277;
			LEVEL 0 FOR 33.266;
			LEVEL 1 FOR 80.012;
			LEVEL 0 FOR 79.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 20.012;
			LEVEL 0 FOR 39.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 79.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 39.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 79.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 20.012;
			LEVEL 0 FOR 39.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 79.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 39.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 79.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 20.012;
			LEVEL 0 FOR 39.988;
			LEVEL 1 FOR 60.012;
			LEVEL 0 FOR 79.988;
			LEVEL 1 FOR 40.012;
			LEVEL 0 FOR 19.988;
			LEVEL 1 FOR 2.457;
		}
	}
}

TRANSITION_LIST("STATE[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.23;
			LEVEL 0 FOR 13.294;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 100.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 40.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 100.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 100.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 40.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 100.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 100.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 40.016;
			LEVEL 1 FOR 59.984;
			LEVEL 0 FOR 100.016;
			LEVEL 1 FOR 19.984;
			LEVEL 0 FOR 20.016;
			LEVEL 1 FOR 2.476;
		}
	}
}

TRANSITION_LIST("LEDG[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.296;
			LEVEL 0 FOR 1994.704;
		}
	}
}

TRANSITION_LIST("SW[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("instruction[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.461;
			LEVEL 0 FOR 1995.539;
		}
	}
}

TRANSITION_LIST("instruction[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.985;
			LEVEL 0 FOR 1995.015;
		}
	}
}

TRANSITION_LIST("instruction[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.121;
			LEVEL 0 FOR 1995.879;
		}
	}
}

TRANSITION_LIST("instruction[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.76;
			LEVEL 0 FOR 1995.24;
		}
	}
}

TRANSITION_LIST("instruction[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.387;
			LEVEL 0 FOR 1995.613;
		}
	}
}

TRANSITION_LIST("instruction[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.66;
			LEVEL 0 FOR 1995.34;
		}
	}
}

TRANSITION_LIST("instruction[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.077;
			LEVEL 0 FOR 1994.923;
		}
	}
}

TRANSITION_LIST("instruction[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.354;
			LEVEL 0 FOR 313.347;
			LEVEL 1 FOR 139.947;
			LEVEL 0 FOR 560.053;
			LEVEL 1 FOR 139.947;
			LEVEL 0 FOR 560.053;
			LEVEL 1 FOR 139.947;
			LEVEL 0 FOR 142.352;
		}
	}
}

TRANSITION_LIST("instruction[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.885;
			LEVEL 0 FOR 453.374;
			LEVEL 1 FOR 199.913;
			LEVEL 0 FOR 500.087;
			LEVEL 1 FOR 199.913;
			LEVEL 0 FOR 500.087;
			LEVEL 1 FOR 141.741;
		}
	}
}

TRANSITION_LIST("instruction[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.372;
			LEVEL 0 FOR 93.322;
			LEVEL 1 FOR 359.964;
			LEVEL 0 FOR 360.036;
			LEVEL 1 FOR 339.964;
			LEVEL 0 FOR 360.036;
			LEVEL 1 FOR 339.964;
			LEVEL 0 FOR 142.342;
		}
	}
}

TRANSITION_LIST("instruction[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.581;
			LEVEL 0 FOR 93.373;
			LEVEL 1 FOR 219.919;
			LEVEL 0 FOR 500.081;
			LEVEL 1 FOR 199.919;
			LEVEL 0 FOR 500.081;
			LEVEL 1 FOR 199.919;
			LEVEL 0 FOR 282.127;
		}
	}
}

TRANSITION_LIST("instruction[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.598;
			LEVEL 0 FOR 93.378;
			LEVEL 1 FOR 219.911;
			LEVEL 0 FOR 500.089;
			LEVEL 1 FOR 199.911;
			LEVEL 0 FOR 500.089;
			LEVEL 1 FOR 199.911;
			LEVEL 0 FOR 282.113;
		}
	}
}

TRANSITION_LIST("instruction[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.356;
			LEVEL 0 FOR 1995.644;
		}
	}
}

TRANSITION_LIST("instruction[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.168;
			LEVEL 0 FOR 1995.832;
		}
	}
}

TRANSITION_LIST("instruction[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.564;
			LEVEL 0 FOR 1995.436;
		}
	}
}

TRANSITION_LIST("instruction[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.552;
			LEVEL 0 FOR 1995.448;
		}
	}
}

TRANSITION_LIST("instruction[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.344;
			LEVEL 0 FOR 653.348;
			LEVEL 1 FOR 159.943;
			LEVEL 0 FOR 540.057;
			LEVEL 1 FOR 159.943;
			LEVEL 0 FOR 482.365;
		}
	}
}

TRANSITION_LIST("instruction[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.214;
			LEVEL 0 FOR 1995.786;
		}
	}
}

TRANSITION_LIST("instruction[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.192;
			LEVEL 0 FOR 1995.808;
		}
	}
}

TRANSITION_LIST("instruction[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.893;
			LEVEL 0 FOR 1995.107;
		}
	}
}

TRANSITION_LIST("instruction[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.635;
			LEVEL 0 FOR 1995.365;
		}
	}
}

TRANSITION_LIST("instruction[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.125;
			LEVEL 0 FOR 93.41;
			LEVEL 1 FOR 219.881;
			LEVEL 0 FOR 140.119;
			LEVEL 1 FOR 199.881;
			LEVEL 0 FOR 160.119;
			LEVEL 1 FOR 199.881;
			LEVEL 0 FOR 140.119;
			LEVEL 1 FOR 199.881;
			LEVEL 0 FOR 160.119;
			LEVEL 1 FOR 199.881;
			LEVEL 0 FOR 140.119;
			LEVEL 1 FOR 140.465;
		}
	}
}

TRANSITION_LIST("instruction[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.447;
			LEVEL 0 FOR 1995.553;
		}
	}
}

TRANSITION_LIST("instruction[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.085;
			LEVEL 0 FOR 93.318;
			LEVEL 1 FOR 219.968;
			LEVEL 0 FOR 140.032;
			LEVEL 1 FOR 199.968;
			LEVEL 0 FOR 160.032;
			LEVEL 1 FOR 199.968;
			LEVEL 0 FOR 140.032;
			LEVEL 1 FOR 199.968;
			LEVEL 0 FOR 160.032;
			LEVEL 1 FOR 199.968;
			LEVEL 0 FOR 140.032;
			LEVEL 1 FOR 141.597;
		}
	}
}

TRANSITION_LIST("instruction[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.539;
			LEVEL 0 FOR 93.2;
			LEVEL 1 FOR 560.087;
			LEVEL 0 FOR 159.913;
			LEVEL 1 FOR 540.087;
			LEVEL 0 FOR 159.913;
			LEVEL 1 FOR 480.261;
		}
	}
}

TRANSITION_LIST("instruction[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.993;
			LEVEL 0 FOR 313.351;
			LEVEL 1 FOR 139.935;
			LEVEL 0 FOR 200.065;
			LEVEL 1 FOR 159.935;
			LEVEL 0 FOR 200.065;
			LEVEL 1 FOR 139.935;
			LEVEL 0 FOR 200.065;
			LEVEL 1 FOR 159.935;
			LEVEL 0 FOR 200.065;
			LEVEL 1 FOR 139.935;
			LEVEL 0 FOR 141.721;
		}
	}
}

TRANSITION_LIST("instruction[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.76;
			LEVEL 0 FOR 313.315;
			LEVEL 1 FOR 139.977;
			LEVEL 0 FOR 200.023;
			LEVEL 1 FOR 159.977;
			LEVEL 0 FOR 200.023;
			LEVEL 1 FOR 139.977;
			LEVEL 0 FOR 200.023;
			LEVEL 1 FOR 159.977;
			LEVEL 0 FOR 200.023;
			LEVEL 1 FOR 139.977;
			LEVEL 0 FOR 141.948;
		}
	}
}

TRANSITION_LIST("instruction[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.631;
			LEVEL 0 FOR 93.391;
			LEVEL 1 FOR 219.898;
			LEVEL 0 FOR 140.102;
			LEVEL 1 FOR 199.898;
			LEVEL 0 FOR 160.102;
			LEVEL 1 FOR 199.898;
			LEVEL 0 FOR 140.102;
			LEVEL 1 FOR 199.898;
			LEVEL 0 FOR 160.102;
			LEVEL 1 FOR 199.898;
			LEVEL 0 FOR 140.102;
			LEVEL 1 FOR 137.978;
		}
	}
}

TRANSITION_LIST("instruction[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.914;
			LEVEL 0 FOR 313.361;
			LEVEL 1 FOR 139.93;
			LEVEL 0 FOR 560.07;
			LEVEL 1 FOR 139.93;
			LEVEL 0 FOR 560.07;
			LEVEL 1 FOR 139.93;
			LEVEL 0 FOR 141.795;
		}
	}
}

TRANSITION_LIST("instruction[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.894;
			LEVEL 0 FOR 313.374;
			LEVEL 1 FOR 139.915;
			LEVEL 0 FOR 200.085;
			LEVEL 1 FOR 159.915;
			LEVEL 0 FOR 200.085;
			LEVEL 1 FOR 139.915;
			LEVEL 0 FOR 200.085;
			LEVEL 1 FOR 159.915;
			LEVEL 0 FOR 200.085;
			LEVEL 1 FOR 139.915;
			LEVEL 0 FOR 141.817;
		}
	}
}

TRANSITION_LIST("instruction[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.601;
			LEVEL 0 FOR 93.189;
			LEVEL 1 FOR 1901.21;
		}
	}
}

TRANSITION_LIST("instruction[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.159;
			LEVEL 0 FOR 93.225;
			LEVEL 1 FOR 1901.616;
		}
	}
}

TRANSITION_LIST("programcounter_in[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.578;
			LEVEL 0 FOR 1990.422;
		}
	}
}

TRANSITION_LIST("programcounter_in[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.854;
			LEVEL 0 FOR 1988.146;
		}
	}
}

TRANSITION_LIST("programcounter_in[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.86;
			LEVEL 0 FOR 1987.14;
		}
	}
}

TRANSITION_LIST("programcounter_in[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.973;
			LEVEL 0 FOR 1987.027;
		}
	}
}

TRANSITION_LIST("programcounter_in[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.378;
			LEVEL 0 FOR 1988.622;
		}
	}
}

TRANSITION_LIST("programcounter_in[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.474;
			LEVEL 0 FOR 1986.526;
		}
	}
}

TRANSITION_LIST("programcounter_in[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 15.012;
			LEVEL 0 FOR 1984.988;
		}
	}
}

TRANSITION_LIST("programcounter_in[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 14.518;
			LEVEL 0 FOR 1985.482;
		}
	}
}

TRANSITION_LIST("programcounter_in[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.113;
			LEVEL 0 FOR 1988.887;
		}
	}
}

TRANSITION_LIST("programcounter_in[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.85;
			LEVEL 0 FOR 1988.15;
		}
	}
}

TRANSITION_LIST("programcounter_in[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.741;
			LEVEL 0 FOR 1988.259;
		}
	}
}

TRANSITION_LIST("programcounter_in[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.82;
			LEVEL 0 FOR 1989.18;
		}
	}
}

TRANSITION_LIST("programcounter_in[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.946;
			LEVEL 0 FOR 1989.054;
		}
	}
}

TRANSITION_LIST("programcounter_in[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 14.097;
			LEVEL 0 FOR 1985.903;
		}
	}
}

TRANSITION_LIST("programcounter_in[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.158;
			LEVEL 0 FOR 1989.842;
		}
	}
}

TRANSITION_LIST("programcounter_in[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.144;
			LEVEL 0 FOR 1986.856;
		}
	}
}

TRANSITION_LIST("programcounter_in[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 14.139;
			LEVEL 0 FOR 1985.861;
		}
	}
}

TRANSITION_LIST("programcounter_in[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 14.808;
			LEVEL 0 FOR 1985.192;
		}
	}
}

TRANSITION_LIST("programcounter_in[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.296;
			LEVEL 0 FOR 1986.704;
		}
	}
}

TRANSITION_LIST("programcounter_in[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 14.926;
			LEVEL 0 FOR 1985.074;
		}
	}
}

TRANSITION_LIST("programcounter_in[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.832;
			LEVEL 0 FOR 1987.168;
		}
	}
}

TRANSITION_LIST("programcounter_in[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.436;
			LEVEL 0 FOR 1986.564;
		}
	}
}

TRANSITION_LIST("programcounter_in[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 14.287;
			LEVEL 0 FOR 1985.713;
		}
	}
}

TRANSITION_LIST("programcounter_in[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.78;
			LEVEL 0 FOR 1987.22;
		}
	}
}

TRANSITION_LIST("programcounter_in[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 13.662;
			LEVEL 0 FOR 1986.338;
		}
	}
}

TRANSITION_LIST("programcounter_in[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.018;
			LEVEL 0 FOR 1987.982;
		}
	}
}

TRANSITION_LIST("programcounter_in[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.722;
			LEVEL 0 FOR 389.601;
			LEVEL 1 FOR 179.899;
			LEVEL 0 FOR 19.931;
			LEVEL 1 FOR 143.335;
			LEVEL 0 FOR 356.835;
			LEVEL 1 FOR 179.899;
			LEVEL 0 FOR 19.931;
			LEVEL 1 FOR 143.335;
			LEVEL 0 FOR 356.835;
			LEVEL 1 FOR 179.899;
			LEVEL 0 FOR 17.778;
		}
	}
}

TRANSITION_LIST("programcounter_in[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.05;
			LEVEL 0 FOR 367.973;
			LEVEL 1 FOR 20.279;
			LEVEL 0 FOR 179.767;
			LEVEL 1 FOR 20.44;
			LEVEL 0 FOR 479.514;
			LEVEL 1 FOR 20.279;
			LEVEL 0 FOR 179.767;
			LEVEL 1 FOR 20.44;
			LEVEL 0 FOR 479.514;
			LEVEL 1 FOR 20.279;
			LEVEL 0 FOR 179.767;
			LEVEL 1 FOR 19.931;
		}
	}
}

TRANSITION_LIST("programcounter_in[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.63;
			LEVEL 0 FOR 248.297;
			LEVEL 1 FOR 339.898;
			LEVEL 0 FOR 360.102;
			LEVEL 1 FOR 339.898;
			LEVEL 0 FOR 360.102;
			LEVEL 1 FOR 339.073;
		}
	}
}

TRANSITION_LIST("programcounter_in[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.792;
			LEVEL 0 FOR 152.982;
			LEVEL 1 FOR 95.239;
			LEVEL 0 FOR 140.004;
			LEVEL 1 FOR 199.996;
			LEVEL 0 FOR 264.761;
			LEVEL 1 FOR 95.239;
			LEVEL 0 FOR 140.004;
			LEVEL 1 FOR 199.996;
			LEVEL 0 FOR 264.761;
			LEVEL 1 FOR 95.239;
			LEVEL 0 FOR 140.004;
			LEVEL 1 FOR 199.983;
		}
	}
}

TRANSITION_LIST("programcounter_in[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.361;
			LEVEL 0 FOR 153.324;
			LEVEL 1 FOR 75.271;
			LEVEL 0 FOR 624.729;
			LEVEL 1 FOR 75.271;
			LEVEL 0 FOR 624.729;
			LEVEL 1 FOR 75.271;
			LEVEL 0 FOR 359.044;
		}
	}
}

TRANSITION_LIST("programcounter_in[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "SW[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "STATE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "STATE[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "STATE[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "STATE[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "STATE[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "STATE[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "STATE[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "LEDG[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "instruction";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "programcounter_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 43;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
